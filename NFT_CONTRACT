from web3 import Web3
from web3.middleware import geth_poa_middleware
from eth_account import Account

# Настройки
infura_url = 'https://mainnet.optimism.io'  # URL ноды Optimism
private_key = 'YOUR_PRIVATE_KEY'  # Ваш приватный ключ
nft_contract_address = 'NFT_CONTRACT_ADDRESS'  # Адрес вашего NFT-контракта на сети Optimism

# Устанавливаем подключение к сети Optimism
w3 = Web3(Web3.HTTPProvider(infura_url))
w3.middleware_onion.inject(geth_poa_middleware, layer=0)

# Создаем объект аккаунта из приватного ключа
account = Account.from_key(private_key)

# Загружаем ABI вашего NFT-контракта (необходимо заменить на реальный ABI)
nft_contract_abi = [
    # Ваш ABI здесь
]

# Создаем объект контракта
nft_contract = w3.eth.contract(address=nft_contract_address, abi=nft_contract_abi)

# Функция для клейма NFT
def claim_nft():
    try:
        # Получаем текущий адрес аккаунта
        sender_address = account.address

        # Вызываем функцию клейма NFT
        claim_tx = nft_contract.functions.claimNFT().buildTransaction({
            'chainId': 10,  # ID сети Optimism
            'gas': 2000000,  # Лимит газа
            'gasPrice': w3.toWei('0.001', 'ether'),  # Цена газа
            'nonce': w3.eth.getTransactionCount(sender_address),  # Получаем nonce
            'from': sender_address,
        })

        # Подписываем и отправляем транзакцию
        signed_tx = w3.eth.account.sign_transaction(claim_tx, private_key=private_key)
        tx_hash = w3.eth.sendRawTransaction(signed_tx.rawTransaction)
        print(f"Транзакция отправлена: {w3.toHex(tx_hash)}")

    except Exception as e:
        print(f"Произошла ошибка: {e}")

# Вызываем функцию клейма NFT
claim_nft()
